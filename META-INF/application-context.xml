<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="fileProvider" class="at.ac.tuwien.docspars.io.FileProvider">
	    <constructor-arg name="file_path" value="${doc.file_location}"/>
	    <constructor-arg name="file_type" value="${doc.file_type}"/>
	    <constructor-arg name="max_Files" value="${doc.max_Files}"/>
	</bean>
	
	<bean id="processProperties" class="at.ac.tuwien.docspars.util.ProcessPropertiesHandler">
	    <constructor-arg name="batch_size" value="${doc.batch_size}"/>
	    <constructor-arg name="start_offset" value="${doc.start_doc_offset}"/>
	    <constructor-arg name="max_Pages" value="${doc.max}"/>
	    <constructor-arg name="date_format" value="${doc.date_format}"/>
	    <constructor-arg name="scenario" value="${doc.scenario}"/>
	    <constructor-arg name="language" value="${doc.lang}"/>
	    <constructor-arg name="sc" value="${doc.scenario}"/>
	</bean>
	
	<bean id="documentHandler" class="at.ac.tuwien.docspars.util.${doc.scenario}DocumentHandler">
		<constructor-arg name="dictDAO" ref="dictDAO"/>
		<constructor-arg name="docDAO" ref="docDAO"/>
		<constructor-arg name="termDAO" ref="termDAO"/>
	</bean>

    <!-- these are the service objects that we want to make transactional -->
    
    <bean id="persistanceService" class="at.ac.tuwien.docspars.services.impl.DBPersistanceService">
    	<constructor-arg name="dictDAO" ref="dictDAO"/>
    	<constructor-arg name="docDAO" ref="docDAO"/>
    	<constructor-arg name="termDAO" ref="termDAO"/>
    </bean>
    
	<bean id="dictDAO" class="at.ac.tuwien.docspars.io.db.${doc.scenario}DictDAODocsDB">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>

	<bean id="docDAO" class="at.ac.tuwien.docspars.io.db.DocDAODocsDB">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>

	<bean id="termDAO" class="at.ac.tuwien.docspars.io.db.TermDAODocsDB">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>    
	    
    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution of an operation defined by the PersistanceService interface -->
    <aop:config>
        <aop:pointcut id="persistanceService" expression="execution(* ac.at.tuwien.docspars.io.services.PersistanceService.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="persistanceService"/>
    </aop:config>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
	</bean>
	
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <context:property-placeholder location="jdbc.properties"/>
    <context:property-placeholder location="project-settings.properties"/>
</beans>